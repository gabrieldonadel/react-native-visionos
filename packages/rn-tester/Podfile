require_relative '../react-native/scripts/react_native_pods'

source 'https://cdn.cocoapods.org/'
platform :ios, min_ios_version_supported

prepare_react_native_project!

IN_CI = ENV['CI'] == 'true'

@prefix_path = "../react-native"

linkage = ENV['USE_FRAMEWORKS']
USE_FRAMEWORKS = linkage != nil
if USE_FRAMEWORKS
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# Disable flipper for now as it's not compatible with visionOS
def pods(target_name, options = {}, use_flipper: false)
  project 'RNTesterPods.xcodeproj'

  fabric_enabled = ENV['USE_FRAMEWORKS'] == 'dynamic' ? false : true

  # Hermes is now enabled by default.
  # The following line will only disable Hermes if the USE_HERMES envvar is SET to a value other than 1 (e.g. USE_HERMES=0).
  # Temporarily disable hermes as it depends on libevent
  hermes_enabled = false # !ENV.has_key?('USE_HERMES') || ENV['USE_HERMES'] == '1'
  puts "Configuring #{target_name} with Fabric #{fabric_enabled ? "enabled" : "disabled"}.#{hermes_enabled ? " Using Hermes engine." : ""}"

  if ENV['RCT_NEW_ARCH_ENABLED'] == '1'
    # Custom fabric component is only supported when using codegen discovery.
    pod 'MyNativeView', :path => "NativeComponentExample"
  end

  use_react_native!(
    path: @prefix_path,
    fabric_enabled: fabric_enabled,
    hermes_enabled: hermes_enabled,
    flipper_configuration: use_flipper ? FlipperConfiguration.enabled : FlipperConfiguration.disabled,
    app_path: "#{Dir.pwd}",
    config_file_dir: "#{Dir.pwd}/node_modules",
    production: false, #deprecated
    ios_folder: '.',
  )
  pod 'ReactCommon-Samples', :path => "#{@prefix_path}/ReactCommon/react/nativemodule/samples"

  # Additional Pods which aren't included in the default Podfile
  pod 'React-RCTPushNotification', :path => "#{@prefix_path}/Libraries/PushNotificationIOS"
  pod 'Yoga', :path => "#{@prefix_path}/ReactCommon/yoga", :modular_headers => true
  # Additional Pods which are classed as unstable

  # RNTester native modules and components
  pod 'ScreenshotManager', :path => "NativeModuleExample"
  if ENV['RCT_NEW_ARCH_ENABLED'] == '1'
    pod 'NativeCxxModuleExample', :path => "NativeCxxModuleExample"
  end
end

target 'RNTester' do
  pods('RNTester')
end

target 'RNTesterUnitTests' do
  pods('RNTesterUnitTests')
  pod 'React-RCTTest', :path => "./RCTTest"
  pod 'OCMock', '~> 3.9.1'
end

target 'RNTesterIntegrationTests' do
  pods('RNTesterIntegrationTests')
  pod 'React-RCTTest', :path => "./RCTTest"
end

target 'RNTester-visionOS' do
  platform :visionos, '1.0'
  pods('RNTester-visionOS')
end

target 'RNTester-visionOSTests' do
  platform :visionos, '1.0'
  pods('RNTester-visionOSUnitTests')
  pod 'React-RCTTest', :path => "./RCTTest"
end

post_install do |installer|
  react_native_post_install(installer, @prefix_path, :mac_catalyst_enabled => false)
  __fix_double_definition_of_clockid_in_folly()
end
